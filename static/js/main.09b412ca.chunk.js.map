{"version":3,"sources":["components/cardList.tsx","components/NewCard.tsx","components/Popup.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["CardList","props","deletePost","editText","react_default","a","createElement","Fragment","items","map","card","key","id","className","title","text","onClick","src","pic","alt","data","NewCard","_ref","onAddCard","textInputRef","useRef","_useState","useState","_useState2","Object","slicedToArray","cardValue","setCardValue","_useState3","_useState4","cityCardValue","setCityCardValue","onSubmit","e","preventDefault","length","alert","console","log","enteredText","current","value","htmlFor","placeholder","onChange","target","type","ref","Popup","saveNewData","textValue","setTextValue","postcarName","setPostcarName","picURL","App","postCard","setPostCard","popup","setPopup","useEffect","Date","toLocaleDateString","components_NewCard","city","index","Math","floor","random","prevState","concat","toConsumableArray","components_cardList","postId","filter","item","postUpdateIndex","findIndex","Item","splice","components_Popup","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","components_App"],"mappings":"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","file":"static/js/main.09b412ca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../style/cardList.css\";\r\nimport { cardsInterface } from \"./interface\";\r\n\r\nconst CardList: React.FC<cardsInterface> = (props) => {\r\n  const { deletePost, editText } = props;\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {props.items.map((card) => (\r\n          <li key={card.id}>\r\n            <h2 className=\"title\">Postcard</h2>\r\n            <p>{card.title}</p>\r\n            <span className=\"text\">{card.text}</span>\r\n            <button onClick={() => editText(card.id)}>Change Text</button>\r\n            <div className=\"pic\">\r\n              <img src={card.pic} alt=\"somePhoto\" />\r\n            </div>\r\n            <div className=\"data\">Picture was made {card.data}</div>\r\n            <button onClick={() => deletePost(card.id)}>DELETE</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"../style/newCard.css\";\r\n\r\ntype NewCardProps = {\r\n  onAddCard: (cardText: string, city: string) => void;\r\n};\r\n\r\nconst NewCard: React.FC<NewCardProps> = ({ onAddCard }) => {\r\n  const textInputRef = useRef<HTMLInputElement>(null);\r\n  const [cardValue, setCardValue] = useState<string>(\"\");\r\n  const [cityCardValue, setCityCardValue] = useState<string>(\"\");\r\n  const cardSubmitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (cardValue.length < 3)\r\n      return alert(\"Card must contain at least 3 character\");\r\n    console.log(cardValue);\r\n    const enteredText = textInputRef.current!.value;\r\n    console.log(enteredText);\r\n    onAddCard(enteredText, cityCardValue);\r\n    setCardValue(\"\");\r\n    setCityCardValue(\"\");\r\n  };\r\n\r\n  const handleChangeValue = (e: React.FormEvent) => {\r\n    setCardValue((e.target as HTMLTextAreaElement).value);\r\n  };\r\n\r\n  const handleCityValueChange = (e: React.FormEvent) => {\r\n    setCityCardValue((e.target as HTMLTextAreaElement).value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={cardSubmitHandler}>\r\n        <div>\r\n          <label htmlFor=\"card-name\">Postcard City</label>\r\n          <input\r\n            placeholder=\"Type city...\"\r\n            value={cityCardValue}\r\n            onChange={handleCityValueChange}\r\n            className=\"card-input card-city\"\r\n            type=\"text\"\r\n            id=\"card-list\"\r\n            ref={textInputRef}\r\n          />\r\n          <br />\r\n          <label htmlFor=\"card-list\">Postcard msg</label>\r\n          <input\r\n            placeholder=\"Write something....\"\r\n            value={cardValue}\r\n            onChange={handleChangeValue}\r\n            className=\"card-input\"\r\n            type=\"text\"\r\n            id=\"card-list\"\r\n            ref={textInputRef}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">ADD CARD</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewCard;\r\n","import React, { useState } from \"react\";\r\nimport \"../style/popup.css\";\r\n\r\ninterface popupData {\r\n  saveNewData: (value: string, postcarName: string) => void;\r\n}\r\n\r\nconst Popup: React.FC<popupData> = ({ saveNewData }) => {\r\n  const [textValue, setTextValue] = useState<string>(\"\");\r\n  const [postcarName, setPostcarName] = useState<string>(\"\");\r\n\r\n  const handleChangeText = (e: React.FormEvent) => {\r\n    // console.log(e.target.value);\r\n\r\n    setTextValue((e.target as HTMLTextAreaElement).value);\r\n  };\r\n  const handleChangeTextPostcart = (e: React.FormEvent) => {\r\n    // console.log(e.target.value);\r\n    setPostcarName((e.target as HTMLTextAreaElement).value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"popup\">\r\n        <h3>Describe your travel experience</h3>\r\n        <div className=\"popup__input\">\r\n          <label>City</label>\r\n          <input\r\n            value={postcarName}\r\n            onChange={handleChangeTextPostcart}\r\n            className=\"popup__input-change\"\r\n            type=\"text\"\r\n          />\r\n          <label>Postcard message</label>\r\n          <input\r\n            value={textValue}\r\n            onChange={handleChangeText}\r\n            className=\"popup__input-change\"\r\n            type=\"text\"\r\n          />\r\n          <button\r\n            onClick={() => saveNewData(textValue, postcarName)}\r\n            className=\"popup__input--btn\"\r\n          >\r\n            Accept\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Popup;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"../style/App.css\";\n\nimport CardList from \"./cardList\";\nimport NewCard from \"./NewCard\";\nimport { Card } from \"./interface\";\nimport Popup from \"./Popup\";\n\nconst picURL = `https://picsum.photos/seed/picsum/350/200`;\n\nconst App: React.FC = () => {\n  const [postCard, setPostCard] = useState<Card[]>([]);\n  const [popup, setPopup] = useState<Boolean>(false);\n  console.log(postCard);\n\n  const cardAddHandler = (text: string, city: string) => {\n    const index = Math.floor(Math.random() * 999);\n    setPostCard((prevState) => [\n      ...prevState,\n      {\n        title: city,\n        id: index,\n        text: text,\n        pic: picURL,\n        data: new Date().toLocaleDateString(),\n      },\n    ]);\n  };\n\n  const postDeleteHandler = (postId: number) => {\n    setPostCard((prevState) => {\n      return prevState.filter((item) => item.id !== postId);\n    });\n  };\n\n  const handleEditText = (id: number) => {\n    let postUpdateIndex: number = postCard.findIndex((card) => card.id === id);\n\n    const Item = [...postCard];\n    Item.splice(postUpdateIndex, 1);\n    setPostCard(Item);\n    setPopup(true);\n  };\n\n  useEffect(() => {\n    setPostCard(() => [\n      {\n        title: \"Mont Blanc\",\n        id: 0,\n        text:\n          \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci, ullam eligendi rerum expedita alias delectus corporis libero mollitia !\",\n        pic: picURL,\n        data: new Date().toLocaleDateString(),\n      },\n    ]);\n  }, []);\n\n  const handleSubmitNewData = (value: string, postcarName: string) => {\n    if (!value) return alert(\"Type something\");\n    setPopup(false);\n\n    setPostCard((prevState) => [\n      ...prevState,\n      {\n        title: postcarName,\n        id: Math.random() * 999,\n        text: value,\n        pic: picURL,\n        data: new Date().toLocaleDateString(),\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <NewCard onAddCard={cardAddHandler} />\n        <CardList\n          deletePost={postDeleteHandler}\n          items={postCard}\n          editText={handleEditText}\n        />\n        {popup ? <Popup saveNewData={handleSubmitNewData} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}